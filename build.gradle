plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "com.github.johnrengelman.shadow" version "5.2.0"
}

group = 'com.function.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
    jcenter()
    maven {
    	url "https://plugins.gradle.org/m2/"
    }
}

ext {
	set('springCloudVersion', "Hoxton.SR1")
}

dependencies {

	compile 'org.springframework.cloud:spring-cloud-starter-function-web:3.0.1.RELEASE'
	
	compile 'org.springframework.cloud:spring-cloud-function-adapter-aws:3.0.1.RELEASE'
	
	compile 'com.amazonaws:aws-lambda-java-events:2.2.7'
	compile 'com.amazonaws:aws-lambda-java-core:1.2.0'
    compile 'com.amazonaws:aws-java-sdk-s3:1.11.557'
    
    compile 'org.apache.commons:commons-lang3:3.0'
    
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.557'
	}
}

shadowJar {
    classifier = 'aws'
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories' ]
        mergeStrategy = "append"
    }
}

assemble.dependsOn shadowJar

test {
	useJUnitPlatform()
}
